name: tests

on: [push, pull_request]

env:
  DATABASE_URL: postgresql://postgres:postgres@localhost/insights-ng
  DATASTORE_URL: ${{ secrets.DATASTORE_URL }}
  FLASK_APP: insights.wsgi:app
  FLASK_ENV: development
  MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432/tcp

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Start Redis
      uses: supercharge/redis-github-action@1.1.0
      with:
        redis-version: 4.0.9

    - name: Setup
      run: |
        python -m pip install --upgrade pip
        pip install -r dev-requirements.txt
        git submodule update --init --recursive
        echo "localhost:5432:postgres:postgres:postgres" > ~/.pgpass && chmod 600 ~/.pgpass
        psql -c 'CREATE DATABASE "insights-ng";' -W -h localhost postgres postgres
        flask db upgrade
        flask data fetch --limit 1000
        flask data geonames
    - name: Test with pytest
      run: python -m pytest

    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --service=github
